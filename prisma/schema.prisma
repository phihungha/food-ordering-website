// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id
  name        String
  email       String @unique
  phoneNumber String @unique

  type     UserType
  customer Customer?
  employee Employee?
}

enum UserType {
  Customer
  Employee
}

model Employee {
  id              String  @id
  user            User    @relation(fields: [id], references: [id])
  manageOrders    Boolean @default(false)
  manageInventory Boolean @default(false)
  manageCustomers Boolean @default(false)
}

model Customer {
  id        String     @id
  user      User       @relation(fields: [id], references: [id])
  orders    Order[]
  cartItems CartItem[]
}

model Product {
  id           Int             @id @default(autoincrement())
  name         String          @unique
  imageUrl     String
  description  String
  category     ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId   Int
  price        Decimal         @db.Money
  unit         String
  additionDate DateTime        @default(now())
  orders       OrderItem[]
  carts        CartItem[]
  buyCount     Int             @default(0)
}

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model CartItem {
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int

  @@id([customerId, productId])
}

model Order {
  id              Int         @id @default(autoincrement())
  customer        Customer    @relation(fields: [customerId], references: [id])
  customerId      String
  creationTime    DateTime    @default(now())
  finishedTime    DateTime?
  deliveryAddress String
  items           OrderItem[]
  status          OrderStatus
  totalAmount     Decimal     @db.Money
}

model OrderItem {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  unitPrice Decimal @db.Money
  itemPrice Decimal @db.Money

  @@id([orderId, productId])
}

enum OrderStatus {
  Pending
  Completed
  Canceled
}
